# Copyright (C) 2018-2019 The ANGLE Project Authors.
# Copyright (C) 2019-2023 LunarG, Inc.
# Copyright (c) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

group("vulkan_loader_test") {
  testonly = true

  public_deps = [ "openharmony/test:test" ]
}

# Vulkan loader build options

## Build libvulkan.so {{{

config("vulkan_internal_config") {
  defines = [ "VK_ENABLE_BETA_EXTENSIONS" ]
  cflags = [
    "-Wno-conversion",
    "-Wno-extra-semi",
    "-Wno-sign-compare",
    "-Wno-unreachable-code",
    "-Wno-unused-function",
    "-Wno-unused-variable",
    "-fPIC",
  ]
  cflags_cc = [ "-std=c++17" ]
  ldflags = [ "-Wl,-Bsymbolic" ]

  defines += [
    "SYSCONFDIR=\"/system/etc:/vendor/etc\"",
    "VK_USE_PLATFORM_OHOS",
  ]
}

config("vulkan_loader_config") {
  include_dirs = [
    "loader/generated",
    "loader",
    "openharmony",
  ]
  defines = [ "LOADER_USE_UNSAFE_FILE_SEARCH=1" ]
}

ohos_shared_library("vulkan_loader") {
  branch_protector_ret = "pac_ret"
  sources = [
    "loader/adapters.h",
    "loader/allocation.c",
    "loader/allocation.h",
    "loader/cJSON.c",
    "loader/cJSON.h",
    "loader/debug_utils.c",
    "loader/debug_utils.h",
    "loader/dev_ext_trampoline.c",
    "loader/extension_manual.c",
    "loader/extension_manual.h",
    "loader/generated/vk_layer_dispatch_table.h",
    "loader/generated/vk_loader_extensions.h",
    "loader/generated/vk_object_types.h",
    "loader/gpa_helper.c",
    "loader/gpa_helper.h",
    "loader/loader.c",
    "loader/loader.h",
    "loader/loader_common.h",
    "loader/loader_environment.c",
    "loader/loader_environment.h",
    "loader/log.c",
    "loader/log.h",
    "loader/phys_dev_ext.c",
    "loader/settings.c",
    "loader/settings.h",
    "loader/stack_allocation.h",
    "loader/terminator.c",
    "loader/trampoline.c",
    "loader/unknown_function_handling.c",
    "loader/unknown_function_handling.h",
    "loader/vk_loader_layer.h",

    # TODO(jmadill): Use assembler where available.
    "loader/unknown_ext_chain.c",
    "loader/vk_loader_platform.h",
    "loader/wsi.c",
    "loader/wsi.h",
    "openharmony/bundle_mgr_helper/vk_bundle_mgr_helper.cpp",
    "openharmony/bundle_mgr_helper/vk_bundle_mgr_helper.h",
    "openharmony/loader_hilog.h",
  ]

  configs = [ ":vulkan_internal_config" ]
  public_configs = [ ":vulkan_loader_config" ]
  external_deps = [
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "vulkan-headers:vulkan_headers",
  ]

  output_name = "vulkan"
  output_extension = "so"

  part_name = "vulkan-loader"
  subsystem_name = "thirdparty"

  license_file = "//third_party/vulkan-loader/LICENSE.txt"
}
## Build libvulkan.so }}}
